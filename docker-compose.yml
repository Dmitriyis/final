version: '3'
services:
  ### KAFKA-CLUSTER-REQ

  zookeeper-reg:
    image: confluentinc/cp-zookeeper:7.4.4
    restart: always
    container_name: zookeeper-reg
    hostname: zookeeper
    ports:
      - "2181:2181"
    volumes:
      - data-zookeeper-log-1:/var/lib/zookeeper/log
      - data-zookeeper-data-1:/var/lib/zookeeper/data
      - ./src/main/resources/cert/zookeeper.sasl.jaas.conf:/etc/zookeeper/secrets/zookeeper.sasl.jaas.conf
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_REQUIRE_CLIENT_AUTH_SCHEME: "sasl"
      ZOOKEEPER_AUTH_PROVIDER_1: "org.apache.zookeeper.server.auth.SASLAuthenticationProvider"
      ZOOKEEPER_SASL_ENABLED: "true"
      KAFKA_OPTS:
        -Djava.security.auth.login.config=/etc/zookeeper/secrets/zookeeper.sasl.jaas.conf
        -Dquorum.cnxn.threads.size=20
        -Dzookeeper.authProvider.1=org.apache.zookeeper.server.auth.SASLAuthenticationProvider
        -Dzookeeper.allowSaslFailedClients=false
        -DjaasLoginRenew=3600000

  kafka-1-reg:
    image: confluentinc/cp-kafka:7.4.4
    restart: always
    container_name: kafka-1-reg
    hostname: kafka-1
    depends_on:
      - zookeeper-reg
    ports:
      - "9092:9092"
      - "9093:9093"
      - "7071:7071"
    volumes:
      - data-kafka-1:/var/lib/kafka/data
      - ./src/main/resources/cert/server/kafka-1:/etc/kafka/secrets
      - ./src/main/resources/cert/kafka_server_jaas.conf:/etc/kafka/jaas/kafka_server_jaas.conf
      - ./src/main/resources/cert/client_sasl.properties:/etc/kafka/jaas/client_sasl.properties
      - ./jmx-agent:/opt/jmx_exporter/
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
      KAFKA_DELETE_TOPIC_ENABLE: true
      KAFKA_LISTENERS: SASL_PLAINTEXT://0.0.0.0:9092,SASL_SSL://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: SASL_PLAINTEXT://kafka-1:9092,SASL_SSL://kafka-1:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: SASL_PLAINTEXT:SASL_PLAINTEXT, SASL_SSL:SASL_SSL
      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
      KAFKA_SECURITY_INTER_BROKER_PROTOCOL: SASL_PLAINTEXT
      KAFKA_SSL_KEYSTORE_FILENAME: kafka-1.keystore.jks
      KAFKA_SSL_KEYSTORE_CREDENTIALS: kafka-1_keystore_creds
      KAFKA_SSL_KEY_CREDENTIALS: kafka-1_sslkey_creds
      KAFKA_SSL_TRUSTSTORE_FILENAME: kafka-1.truststore.jks
      KAFKA_SSL_TRUSTSTORE_CREDENTIALS: kafka-1_truststore_creds
      KAFKA_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: https
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "false"
      KAFKA_SUPER_USERS: "User:admin"
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_OPTS: "-Djava.security.auth.login.config=/etc/kafka/jaas/kafka_server_jaas.conf -Dzookeeper.sasl.client=true -Dzookeeper.sasl.client.username=admin -Dzookeeper.sasl.client.password=password -Dkafka.inter.broker.protocol.version=3.0-IV1"
      EXTRA_ARGS: "-javaagent:/opt/jmx_exporter/jmx_prometheus_javaagent-0.15.0.jar=7071:/opt/jmx_exporter/kafka-connect.yml"

  kafka-2-reg:
    image: confluentinc/cp-kafka:7.4.4
    restart: always
    container_name: kafka-2-reg
    hostname: kafka-2
    depends_on:
      - zookeeper-reg
    ports:
      - "9094:9094"
      - "9095:9095"
      - "7072:7072"
    volumes:
      - data-kafka-2:/var/lib/kafka/data
      - ./src/main/resources/cert/server/kafka-2:/etc/kafka/secrets
      - ./src/main/resources/cert/kafka_server_jaas.conf:/etc/kafka/jaas/kafka_server_jaas.conf
      - ./src/main/resources/cert/client_sasl.properties:/etc/kafka/jaas/client_sasl.properties
      - ./jmx-agent:/opt/jmx_exporter/
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
      KAFKA_DELETE_TOPIC_ENABLE: true
      KAFKA_LISTENERS: SASL_PLAINTEXT://0.0.0.0:9094,SASL_SSL://0.0.0.0:9095
      KAFKA_ADVERTISED_LISTENERS: SASL_PLAINTEXT://kafka-2:9094,SASL_SSL://kafka-2:9095
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: SASL_PLAINTEXT:SASL_PLAINTEXT, SASL_SSL:SASL_SSL
      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
      KAFKA_SECURITY_INTER_BROKER_PROTOCOL: SASL_PLAINTEXT
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_SSL_KEYSTORE_FILENAME: kafka-2.keystore.jks
      KAFKA_SSL_KEYSTORE_CREDENTIALS: kafka-2_keystore_creds
      KAFKA_SSL_KEY_CREDENTIALS: kafka-2_sslkey_creds
      KAFKA_SSL_TRUSTSTORE_FILENAME: kafka-2.truststore.jks
      KAFKA_SSL_TRUSTSTORE_CREDENTIALS: kafka-2_truststore_creds
      KAFKA_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: https
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "false"
      KAFKA_SUPER_USERS: "User:admin"
      KAFKA_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_OPTS: "-Djava.security.auth.login.config=/etc/kafka/jaas/kafka_server_jaas.conf -Dzookeeper.sasl.client=true -Dzookeeper.sasl.client.username=admin -Dzookeeper.sasl.client.password=password -Dkafka.inter.broker.protocol.version=3.0-IV1"
      EXTRA_ARGS: "-javaagent:/opt/jmx_exporter/jmx_prometheus_javaagent-0.15.0.jar=7072:/opt/jmx_exporter/kafka-connect.yml"

  kafka-3-reg:
    image: confluentinc/cp-kafka:7.4.4
    restart: always
    container_name: kafka-3-reg
    hostname: kafka-3
    depends_on:
      - zookeeper-reg
    ports:
      - "9096:9096"
      - "9097:9097"
      - "7073:7073"
    volumes:
      - data-kafka-3:/var/lib/kafka/data
      - ./src/main/resources/cert/server/kafka-3:/etc/kafka/secrets
      - ./src/main/resources/cert/kafka_server_jaas.conf:/etc/kafka/jaas/kafka_server_jaas.conf
      - ./src/main/resources/cert/client_sasl.properties:/etc/kafka/jaas/client_sasl.properties
      - ./jmx-agent:/opt/jmx_exporter/
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
      KAFKA_DELETE_TOPIC_ENABLE: true
      KAFKA_LISTENERS: SASL_PLAINTEXT://0.0.0.0:9096,SASL_SSL://0.0.0.0:9097
      KAFKA_ADVERTISED_LISTENERS: SASL_PLAINTEXT://kafka-3:9096,SASL_SSL://kafka-3:9097
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: SASL_PLAINTEXT:SASL_PLAINTEXT, SASL_SSL:SASL_SSL
      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
      KAFKA_SECURITY_INTER_BROKER_PROTOCOL: SASL_PLAINTEXT
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_SSL_KEYSTORE_FILENAME: kafka-3.keystore.jks
      KAFKA_SSL_KEYSTORE_CREDENTIALS: kafka-3_keystore_creds
      KAFKA_SSL_KEY_CREDENTIALS: kafka-3_sslkey_creds
      KAFKA_SSL_TRUSTSTORE_FILENAME: kafka-3.truststore.jks
      KAFKA_SSL_TRUSTSTORE_CREDENTIALS: kafka-3_truststore_creds
      KAFKA_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: https
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "false"
      KAFKA_SUPER_USERS: "User:admin"
      KAFKA_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_OPTS: "-Djava.security.auth.login.config=/etc/kafka/jaas/kafka_server_jaas.conf -Dzookeeper.sasl.client=true -Dzookeeper.sasl.client.username=admin -Dzookeeper.sasl.client.password=password -Dkafka.inter.broker.protocol.version=3.0-IV1"
      EXTRA_ARGS: "-javaagent:/opt/jmx_exporter/jmx_prometheus_javaagent-0.15.0.jar=7073:/opt/jmx_exporter/kafka-connect.yml"

  schema-registry:
    image: confluentinc/cp-schema-registry:7.4.0
    hostname: schema-registry
    container_name: schema-registry
    restart:
      on-failure
    ports:
      - "8081:8081"
    depends_on:
      - kafka-1-reg
      - kafka-2-reg
      - kafka-3-reg
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: kafka-1:9093,kafka-2:9095,kafka-3:9097
      SCHEMA_REGISTRY_KAFKASTORE_TOPIC_REPLICATION_FACTOR: 3
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
      SCHEMA_REGISTRY_KAFKASTORE_SECURITY_PROTOCOL: SASL_SSL
      SCHEMA_REGISTRY_KAFKASTORE_SASL_MECHANISM: PLAIN
      SCHEMA_REGISTRY_KAFKASTORE_SASL_JAAS_CONFIG: org.apache.kafka.common.security.plain.PlainLoginModule required username="schema-registry" password="12345678";
      SCHEMA_REGISTRY_KAFKASTORE_SSL_TRUSTSTORE_LOCATION: /etc/kafka/certs/truststore.jks
      SCHEMA_REGISTRY_KAFKASTORE_SSL_TRUSTSTORE_PASSWORD: 12345678
      SCHEMA_REGISTRY_KAFKASTORE_SSL_TRUSTSTORE_TYPE: JKS
      SCHEMA_REGISTRY_KAFKASTORE_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: ""
    volumes:
      - ./src/main/resources/cert/client/client.truststore.jks:/etc/kafka/certs/truststore.jks:ro

  kafka-ui-reg:
    image: provectuslabs/kafka-ui:v0.7.0
    container_name: kafka-ui
    restart: always
    ports:
      - "8085:8080"
    depends_on:
      - kafka-1-reg
      - kafka-2-reg
      - kafka-3-reg
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka-1:9093,kafka-2:9095,kafka-3:9097
      KAFKA_CLUSTERS_0_PROPERTIES_SECURITY_PROTOCOL: SASL_SSL
      KAFKA_CLUSTERS_0_PROPERTIES_SASL_MECHANISM: PLAIN
      KAFKA_CLUSTERS_0_PROPERTIES_SASL_JAAS_CONFIG: org.apache.kafka.common.security.plain.PlainLoginModule required username="ui" password="12345678";
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
      KAFKA_CLUSTERS_0_PROPERTIES_SSL_TRUSTSTORE_LOCATION: /etc/kafka/certs/truststore.jks
      KAFKA_CLUSTERS_0_PROPERTIES_SSL_TRUSTSTORE_PASSWORD: 12345678
    volumes:
      - ./src/main/resources/cert/client/client.truststore.jks:/etc/kafka/certs/truststore.jks:ro

  ### KAFKA-CLUSTER-DESTINATION

  zookeeper-destination:
    image: confluentinc/cp-zookeeper:7.4.4
    restart: always
    container_name: zookeeper-destination
    hostname: zookeeper-destination
    ports:
      - "2182:2181"
    volumes:
      - data-zookeeper-log-1-destination:/var/lib/zookeeper/log
      - data-zookeeper-data-1-destination:/var/lib/zookeeper/data
      - ./src/main/resources/cert/zookeeper.sasl.jaas.conf:/etc/zookeeper/secrets/zookeeper.sasl.jaas.conf
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_REQUIRE_CLIENT_AUTH_SCHEME: "sasl"
      ZOOKEEPER_AUTH_PROVIDER_1: "org.apache.zookeeper.server.auth.SASLAuthenticationProvider"
      ZOOKEEPER_SASL_ENABLED: "true"
      KAFKA_OPTS:
        -Djava.security.auth.login.config=/etc/zookeeper/secrets/zookeeper.sasl.jaas.conf
        -Dquorum.cnxn.threads.size=20
        -Dzookeeper.authProvider.1=org.apache.zookeeper.server.auth.SASLAuthenticationProvider
        -Dzookeeper.allowSaslFailedClients=false
        -DjaasLoginRenew=3600000

  kafka-1-destination:
    image: confluentinc/cp-kafka:7.4.4
    restart: always
    container_name: kafka-1-destination
    hostname: kafka-1-destination
    depends_on:
      - zookeeper-destination
    ports:
      - "7092:7092"
      - "7093:7093"
      - "2071:7071"
    volumes:
      - data-kafka-1-destination:/var/lib/kafka/data
      - ./src/main/resources/cert/server/kafka-1:/etc/kafka/secrets
      - ./src/main/resources/cert/kafka_server_jaas.conf:/etc/kafka/jaas/kafka_server_jaas.conf
      - ./src/main/resources/cert/client_sasl.properties:/etc/kafka/jaas/client_sasl.properties
      - ./jmx-agent:/opt/jmx_exporter/
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-destination:2181
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
      KAFKA_DELETE_TOPIC_ENABLE: true
      KAFKA_LISTENERS: SASL_PLAINTEXT://0.0.0.0:7092,SASL_SSL://0.0.0.0:7093
      KAFKA_ADVERTISED_LISTENERS: SASL_PLAINTEXT://kafka-1-destination:7092,SASL_SSL://kafka-1-destination:7093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: SASL_PLAINTEXT:SASL_PLAINTEXT, SASL_SSL:SASL_SSL
      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
      KAFKA_SECURITY_INTER_BROKER_PROTOCOL: SASL_PLAINTEXT
      KAFKA_SSL_KEYSTORE_FILENAME: kafka-1.keystore.jks
      KAFKA_SSL_KEYSTORE_CREDENTIALS: kafka-1_keystore_creds
      KAFKA_SSL_KEY_CREDENTIALS: kafka-1_sslkey_creds
      KAFKA_SSL_TRUSTSTORE_FILENAME: kafka-1.truststore.jks
      KAFKA_SSL_TRUSTSTORE_CREDENTIALS: kafka-1_truststore_creds
      KAFKA_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: https
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "false"
      KAFKA_SUPER_USERS: "User:admin"
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_OPTS: "-Djava.security.auth.login.config=/etc/kafka/jaas/kafka_server_jaas.conf -Dzookeeper.sasl.client=true -Dzookeeper.sasl.client.username=admin -Dzookeeper.sasl.client.password=password -Dkafka.inter.broker.protocol.version=3.0-IV1"
      EXTRA_ARGS: "-javaagent:/opt/jmx_exporter/jmx_prometheus_javaagent-0.15.0.jar=7071:/opt/jmx_exporter/kafka-connect.yml"

  kafka-2-destination:
    image: confluentinc/cp-kafka:7.4.4
    restart: always
    container_name: kafka-2-destination
    hostname: kafka-2-destination
    depends_on:
      - zookeeper-destination
    ports:
      - "7094:7094"
      - "7095:7095"
      - "2072:7072"
    volumes:
      - data-kafka-2-destination:/var/lib/kafka/data
      - ./src/main/resources/cert/server/kafka-2:/etc/kafka/secrets
      - ./src/main/resources/cert/kafka_server_jaas.conf:/etc/kafka/jaas/kafka_server_jaas.conf
      - ./src/main/resources/cert/client_sasl.properties:/etc/kafka/jaas/client_sasl.properties
      - ./jmx-agent:/opt/jmx_exporter/
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-destination:2181
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
      KAFKA_DELETE_TOPIC_ENABLE: true
      KAFKA_LISTENERS: SASL_PLAINTEXT://0.0.0.0:7094,SASL_SSL://0.0.0.0:7095
      KAFKA_ADVERTISED_LISTENERS: SASL_PLAINTEXT://kafka-2-destination:7094,SASL_SSL://kafka-2-destination:7095
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: SASL_PLAINTEXT:SASL_PLAINTEXT, SASL_SSL:SASL_SSL
      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
      KAFKA_SECURITY_INTER_BROKER_PROTOCOL: SASL_PLAINTEXT
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_SSL_KEYSTORE_FILENAME: kafka-2.keystore.jks
      KAFKA_SSL_KEYSTORE_CREDENTIALS: kafka-2_keystore_creds
      KAFKA_SSL_KEY_CREDENTIALS: kafka-2_sslkey_creds
      KAFKA_SSL_TRUSTSTORE_FILENAME: kafka-2.truststore.jks
      KAFKA_SSL_TRUSTSTORE_CREDENTIALS: kafka-2_truststore_creds
      KAFKA_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: https
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "false"
      KAFKA_SUPER_USERS: "User:admin"
      KAFKA_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_OPTS: "-Djava.security.auth.login.config=/etc/kafka/jaas/kafka_server_jaas.conf -Dzookeeper.sasl.client=true -Dzookeeper.sasl.client.username=admin -Dzookeeper.sasl.client.password=password -Dkafka.inter.broker.protocol.version=3.0-IV1"
      EXTRA_ARGS: "-javaagent:/opt/jmx_exporter/jmx_prometheus_javaagent-0.15.0.jar=7072:/opt/jmx_exporter/kafka-connect.yml"

  kafka-3-destination:
    image: confluentinc/cp-kafka:7.4.4
    restart: always
    container_name: kafka-3-destination
    hostname: kafka-3-destination
    depends_on:
      - zookeeper-destination
    ports:
      - "7096:7096"
      - "7097:7097"
      - "2073:7073"
    volumes:
      - data-kafka-3-destination:/var/lib/kafka/data
      - ./src/main/resources/cert/server/kafka-3:/etc/kafka/secrets
      - ./src/main/resources/cert/kafka_server_jaas.conf:/etc/kafka/jaas/kafka_server_jaas.conf
      - ./src/main/resources/cert/client_sasl.properties:/etc/kafka/jaas/client_sasl.properties
      - ./jmx-agent:/opt/jmx_exporter/
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-destination:2181
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
      KAFKA_DELETE_TOPIC_ENABLE: true
      KAFKA_LISTENERS: SASL_PLAINTEXT://0.0.0.0:7096,SASL_SSL://0.0.0.0:7097
      KAFKA_ADVERTISED_LISTENERS: SASL_PLAINTEXT://kafka-3-destination:7096,SASL_SSL://kafka-3-destination:7097
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: SASL_PLAINTEXT:SASL_PLAINTEXT, SASL_SSL:SASL_SSL
      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
      KAFKA_SECURITY_INTER_BROKER_PROTOCOL: SASL_PLAINTEXT
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_SSL_KEYSTORE_FILENAME: kafka-3.keystore.jks
      KAFKA_SSL_KEYSTORE_CREDENTIALS: kafka-3_keystore_creds
      KAFKA_SSL_KEY_CREDENTIALS: kafka-3_sslkey_creds
      KAFKA_SSL_TRUSTSTORE_FILENAME: kafka-3.truststore.jks
      KAFKA_SSL_TRUSTSTORE_CREDENTIALS: kafka-3_truststore_creds
      KAFKA_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: https
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "false"
      KAFKA_SUPER_USERS: "User:admin"
      KAFKA_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_OPTS: "-Djava.security.auth.login.config=/etc/kafka/jaas/kafka_server_jaas.conf -Dzookeeper.sasl.client=true -Dzookeeper.sasl.client.username=admin -Dzookeeper.sasl.client.password=password -Dkafka.inter.broker.protocol.version=3.0-IV1"
      EXTRA_ARGS: "-javaagent:/opt/jmx_exporter/jmx_prometheus_javaagent-0.15.0.jar=7073:/opt/jmx_exporter/kafka-connect.yml"

  kafka-ui-destination:
    image: provectuslabs/kafka-ui:v0.7.0
    container_name: kafka-ui-destination
    restart: always
    ports:
      - "7085:8080"
    depends_on:
      - kafka-1-destination
      - kafka-2-destination
      - kafka-3-destination
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka-1-destination:7093,kafka-2-destination:7095,kafka-3-destination:7097
      KAFKA_CLUSTERS_0_PROPERTIES_SECURITY_PROTOCOL: SASL_SSL
      KAFKA_CLUSTERS_0_PROPERTIES_SASL_MECHANISM: PLAIN
      KAFKA_CLUSTERS_0_PROPERTIES_SASL_JAAS_CONFIG: org.apache.kafka.common.security.plain.PlainLoginModule required username="ui" password="12345678";
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper-destination:2181
      KAFKA_CLUSTERS_0_PROPERTIES_SSL_TRUSTSTORE_LOCATION: /etc/kafka/certs/truststore.jks
      KAFKA_CLUSTERS_0_PROPERTIES_SSL_TRUSTSTORE_PASSWORD: 12345678
    volumes:
      - ./src/main/resources/cert/client/client.truststore.jks:/etc/kafka/certs/truststore.jks:ro

  app:
    build:
      context: ./
    container_name: app
    restart:
      on-failure
    ports:
      - "8090:8090"
    volumes:
      - ./src/main/resources/cert/client/client.truststore.jks:/etc/kafka/secrets/client.truststore
    depends_on:
      - kafka-1-reg
      - kafka-2-reg
      - kafka-3-reg
      - schema-registry

  prometheus:
    image: prom/prometheus:v2.30.3
    container_name: prometheus
    ports:
      - 9090:9090
    restart:
      on-failure
    volumes:
      - ./prometheus:/etc/prometheus
    command: --web.enable-lifecycle --config.file=/etc/prometheus/prometheus-req.yml
    depends_on:
      - kafka-1-reg
      - kafka-2-reg
      - kafka-3-reg
      - schema-registry

  alert-manager:
    image: prom/alertmanager:v0.25.0
    container_name: alertmanager
    ports:
      - "3093:9093"
    restart:
      on-failure
    volumes:
      - ./alert-manager:/etc/alertmanager
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
    depends_on:
      - prometheus

  grafana:
    build:
      context: ./grafana
    container_name: grafana
    ports:
      - 3000:3000
    restart:
      on-failure
    depends_on:
      - prometheus

  mirror-maker:
    image: confluentinc/cp-kafka
    container_name: mirror-maker
    restart:
      on-failure
    volumes:
      - ./consumer.cfg:/etc/consumer.cfg
      - ./producer.cfg:/etc/producer.cfg
      - ./src/main/resources/cert/client/client.truststore.jks:/etc/kafka/secrets/truststore.jks
      - ./src/main/resources/cert/client_sasl.properties:/etc/kafka/jaas/client_sasl.properties
    command: bash -c "sleep 30 && kafka-mirror-maker --consumer.config /etc/consumer.cfg --producer.config /etc/producer.cfg --whitelist 'shop|statistic-client' --num.streams 1"
    depends_on:
      - kafka-1-reg
      - kafka-1-destination
      - zookeeper-reg
      - zookeeper-destination

  elasticsearch:
    image: elasticsearch:8.7.0
    container_name: elasticsearch
    restart: always
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: "1g"
    environment:
      - node.name=elasticsearch
      - discovery.type=single-node
      - xpack.security.enabled=false
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    depends_on:
      - kafka-1-reg
      - kafka-2-reg
      - kafka-3-reg

  kafka-connect:
    image: confluentinc/cp-kafka-connect:7.4.4
    container_name: kafka-connect
    restart: always
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: "1g"
    ports:
      - "8083:8083"
    volumes:
      - ./kafka-connect/confluentinc-kafka-connect-elasticsearch-15.0.0:/usr/share/java/kafka-connect-plugins/confluentinc-kafka-connect-elasticsearch-15.0.0
      - ./src/main/resources/cert/client/client.truststore.jks:/etc/kafka/secrets/client.truststore.jks:ro
    environment:
      CONNECT_BOOTSTRAP_SERVERS: "kafka-1:9093,kafka-2:9095,kafka-3:9097"
      CONNECT_REST_ADVERTISED_HOST_NAME: "kafka-connect"
      CONNECT_GROUP_ID: "kafka-connect-group"
      CONNECT_CONFIG_STORAGE_TOPIC: _connect-configs
      CONNECT_OFFSET_STORAGE_TOPIC: _connect-offsets
      CONNECT_STATUS_STORAGE_TOPIC: _connect-status
      CONNECT_KEY_CONVERTER: "org.apache.kafka.connect.storage.StringConverter"
      CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
      CONNECT_KEY_CONVERTER_SCHEMAS_ENABLE: "true"
      CONNECT_VALUE_CONVERTER: "io.confluent.connect.avro.AvroConverter"
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
      CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE: "true"
      CONNECT_INTERNAL_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_INTERNAL_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_PLUGIN_PATH: "/usr/share/java/kafka-connect-plugins/confluentinc-kafka-connect-elasticsearch-15.0.0"
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_SECURITY_PROTOCOL: "SASL_SSL"
      CONNECT_SASL_MECHANISM: "PLAIN"
      CONNECT_SASL_JAAS_CONFIG: "org.apache.kafka.common.security.plain.PlainLoginModule required username='connect-user' password='12345678';"
      CONNECT_SSL_TRUSTSTORE_LOCATION: "/etc/kafka/secrets/client.truststore.jks"
      CONNECT_SSL_TRUSTSTORE_PASSWORD: "12345678"
      CONNECT_CONSUMER_SECURITY_PROTOCOL: "SASL_SSL"
      CONNECT_CONSUMER_SASL_MECHANISM: "PLAIN"
      CONNECT_CONSUMER_SASL_JAAS_CONFIG: "org.apache.kafka.common.security.plain.PlainLoginModule required username='connect-user' password='12345678';"
      CONNECT_CONSUMER_SSL_TRUSTSTORE_LOCATION: "/etc/kafka/secrets/client.truststore.jks"
      CONNECT_CONSUMER_SSL_TRUSTSTORE_PASSWORD: "12345678"
    depends_on:
      - kafka-1-reg
      - kafka-2-reg
      - kafka-3-reg
      - elasticsearch
      - schema-registry

  hadoop-namenode:
    image: apache/hadoop:3.4.1
    container_name: hadoop-namenode
    hostname: hadoop-namenode
    user: "root"
    restart: always
    platform: linux/amd64
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: "1g"
    ports:
      - "9870:9870"
      - "9000:9000"
    volumes:
      - ./hadoop/core-site.xml:/opt/hadoop/etc/hadoop/core-site.xml
      - ./hadoop/hdfs-site-namenode.xml:/opt/hadoop/etc/hadoop/hdfs-site.xml
      - ./hadoop/namenode_entrypoint.sh:/namenode_entrypoint.sh
    entrypoint: [ "/bin/bash", "/namenode_entrypoint.sh" ]
    command: [ "hdfs", "namenode" ]

  hadoop-datanode-1:
    image: apache/hadoop:3.4.1
    container_name: hadoop-datanode-1
    hostname: hadoop-datanode-1
    user: "root"
    restart: always
    platform: linux/amd64
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: "1g"
    shm_size: 1G
    depends_on:
      - hadoop-namenode
    ports:
      - "9864:9864"
      - "9970:9970"
    volumes:
      - ./hadoop/core-site.xml:/opt/hadoop/etc/hadoop/core-site.xml
      - ./hadoop/hdfs-site-datanode-1.xml:/opt/hadoop/etc/hadoop/hdfs-site.xml
      - ./hadoop/datanode_entrypoint.sh:/datanode_entrypoint.sh
    entrypoint: [ "/bin/bash", "/datanode_entrypoint.sh" ]
    command: [ "hdfs", "datanode" ]

volumes:
  data-zookeeper-log-1:
  data-zookeeper-data-1:
  data-kafka-1:
  data-kafka-2:
  data-kafka-3:
  data-zookeeper-log-1-destination:
  data-zookeeper-data-1-destination:
  data-kafka-1-destination:
  data-kafka-2-destination:
  data-kafka-3-destination:
  elasticsearch-data:
  hadoop-name-data:
  hadoop-data:
  spark-data:
